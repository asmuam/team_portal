// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  admin
  pegawai
  mitra
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  name     String    @unique
  password String
  role     Role?  
  refresh_token  String? @db.VarChar(255) // Adjust length as needed
  Timkerja Timkerja?
}

model Timkerja {
  id        Int        @id @default(autoincrement())
  name      String
  links     Json?
  deskripsi String    // Now make required
  leader    User?      @relation(fields: [leader_id], references: [id], onDelete: SetNull)
  leader_id Int?       @unique
  kegiatan  Kegiatan[]
  link_drive String
}


model Kegiatan {
  id                  Int           @id @default(autoincrement())
  tanggal_pelaksanaan DateTime      @default(now())
  timkerja_id         Int
  name                String
  deskripsi           String        @default("")  // Default value added
  timkerja            Timkerja      @relation(fields: [timkerja_id], references: [id], onDelete: Cascade)
  subkegiatan         Subkegiatan[]
  link_drive String
}

model Subkegiatan {
  id          Int      @id @default(autoincrement())
  tanggal_pelaksanaan  DateTime @default(now())
  kegiatan_id Int
  name        String
  deskripsi           String        @default("")  // Default value added
  kegiatan    Kegiatan @relation(fields: [kegiatan_id], references: [id], onDelete: Cascade)
  tugas       Tugas[]
  link_drive String
}

model Tugas {
  id             Int         @id @default(autoincrement())
  subkegiatan_id Int
  name           String
  deskripsi           String        @default("")  // Default value added
  dateCreated    DateTime
  dueDate        DateTime
  dateUpload     DateTime?
  link           String?
  completed      Boolean     @default(false)
  subkegiatan    Subkegiatan @relation(fields: [subkegiatan_id], references: [id], onDelete: Cascade)
  created_by    String
}

// hapus dahulu tabel pada mysql dibawah ini lalu ganti dengan query pada view.sql
model TimkerjaProgress {
  timkerja_id   Int
  timkerja_name String
  progress      Float

  @@map("TimkerjaProgress") // Map this Prisma model to the SQL view
  @@unique([timkerja_id])   // Menandai timkerja_id sebagai kriteria unik
}

model KegiatanProgress {
  kegiatan_id   Int
  kegiatan_name String
  progress      Float

  @@map("KegiatanProgress") // Map this Prisma model to the SQL view
  @@unique([kegiatan_id])   // Menandai kegiatan_id sebagai kriteria unik
}

model SubkegiatanProgress {
  subkegiatan_id   Int
  subkegiatan_name String
  progress         Float

  @@map("SubkegiatanProgress") // Map this Prisma model to the SQL view
  @@unique([subkegiatan_id])   // Menandai subkegiatan_id sebagai kriteria unik
}
